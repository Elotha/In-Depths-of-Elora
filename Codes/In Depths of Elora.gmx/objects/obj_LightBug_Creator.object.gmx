<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-1000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy Particles

{
    part_emitter_destroy(light_bugs_system,light_bugs_emitter);
    part_system_destroy(light_bugs_system);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Light Bugs

{
    var ww = floor(room_width/32);
    var hh = floor(room_height/32);
    total = ww*hh/12;
    /*repeat(total)
        {
        instance_create(irandom(room_width),irandom(room_height),obj_LightBug);
        }*/
    

    light_bugs_system = part_system_create();
    part_system_depth(light_bugs_system,FOREGROUND2+50);
    light_bugs_type = part_type_create();
    part_type_sprite(light_bugs_type,spr_LightBug,true,false,false);
    part_type_size(light_bugs_type,1,1,0,0);
    part_type_speed(light_bugs_type,0.2,0.6,0,0);
    part_type_direction(light_bugs_type,0,360,0,5);
    part_type_gravity(light_bugs_type,0,270);
    part_type_colour_hsv(light_bugs_type,20,55,200,255,255,255);
    part_type_life(light_bugs_type,180,360);
    part_type_alpha3(light_bugs_type,0,1,0);
    part_system_position(light_bugs_system,x,y);
    
    light_bugs_emitter = part_emitter_create(light_bugs_system);
    part_emitter_region(light_bugs_system,light_bugs_emitter,0,room_width,0,room_height,ps_shape_rectangle,ps_distr_linear);
    part_emitter_burst(light_bugs_system,light_bugs_emitter,light_bugs_type,total);
    part_emitter_stream(light_bugs_system,light_bugs_emitter,light_bugs_type,3);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
