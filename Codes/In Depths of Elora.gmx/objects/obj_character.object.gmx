<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_CharacterIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

{
    //Temel Değişkenler
    MovementPermission = true; //Hareket etme tuşlarına basma iznimiz var mı?
    BottomX = 9; //Karakterin yere bastığını belirten taban genişliğinin yarısı
    HSpeed = 0; //Yatay hız
    VSpeed = 0; //Dikey hız
    HorLimit = 4; //Yatay hız sınırı
    HorAcceleration = 0.5; //Yatay ivme
    BlockUp = noone;
    BlockDown = noone;
    BlockCenter = noone;
    BlockHor = noone;
    depth = CHARACTER;
    Friction = global.Friction; //Yatay sürtünme kuvveti
    FallingSpeed = global.FallingSpeed; //Düşme ivmesi
    FallingLimit = global.FallingLimit; //Maksimum düşme hızı
    
    //Zıplama
    JumpSpeed = -5.8; //Zıplama hızı
    JumpPlus = -0.12;
    JumpCount = 0; //Zıplama sayısı
    JumpMax = 2; //En fazla kaç kere zıplayabiliyoruz?
    JumpPermission = true; //Zıplama tuşuna basma iznimiz var mı?
    
    //Dash
    Dash = false; //Anlık olarak dashte miyiz?
    DashSpeed = 8; //Dash hızı
    DashCooldown = 0; //Dash cooldown
    DashCooldownMax = 60; //Dash cooldown süresi
    DashRange = 18; //Maksimum mesafe
    
    //Görsel Değişkenler
    image_speed = 1/6; //Animasyon hızı   
    SpriteChange = false; //Sprite'ın değişip değişmediğini kontrol eden değer
    LastSprite = spr_CharacterIdle; //Step başında hangi sprite'a sahip olduğunu kaydeden değer
    Draw = global.Draw;
    SpriteLock = false;
    
    //Hasar Değişkenleri
    Invincibility = 0; //Hasar alma durumu
    InvincibilityCount = 0; //Yanıp sönme sayısı
    
    //Diğer Değişkenler
    Resistance = 1; //Direnç
    StepCount[0] = -1; //Sesler için kaç step geçtiğini kontrol eden array
    if instance_number(obj_HUD) != 0 then obj_HUD.Health = global.HealthMax;
    global.Focus = "Character"; //Kontrol odağını karakter yap
    Focus = global.Focus;
    
    //Büyü görüşü modu
    MagicalSight = false; //Aktivasyon
    MagicalSightTimeMax = 5*room_speed; //Maksimum zaman
    MagicalSightTime = MagicalSightTimeMax; //Kalan kullanım
    MagicalSightCooldown = 2*room_speed; //Tekrar dolmadan önce geçmesi gereken süre
    MagicalSightRegeneration = 2*room_speed; //Otomatik olarak ne kadar dolacaK?
    MagicalSightRegenSpeed = 1; //Tekrar dolma hızı
    MagicalSightCount = 0; //Alarm çalıştırma sayısı
    MagicalInteraction = -1; //Büyü görüşünde bir canavara dash attık mı?
    
    
    scr_ControlGlobals(false); //Kontrolleri çek
    
    //Journal için hangi tuşun atandığını sapta
    ini_open(CurrentProfile + "_Config.ini");
    JournalKey = ord(ini_read_string("Controls",ControlKeys.Journal,ord('J')));
    ini_close();
    
    with(obj_Camera) { //Kamerayı karaktere sabitle
        x = other.x;
        y = other.y;
        }
        
    create_only_one(x,y,obj_CharacterLight); //Işığı yarat
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Resistance Potion

{
    Resistance = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Magical Sight Regeneration

{
    if ++MagicalSightCount &lt; MagicalSightRegeneration {
        if MagicalSightTime &lt; MagicalSightTimeMax then MagicalSightTime++;
        else {
            MagicalSightCount = 0;
            exit;
            }
        alarm[4] = MagicalSightRegenSpeed;
        }
    else MagicalSightCount = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprite Lock

{
    SpriteLock = false;
    JumpPermission = true;
    alarm[0] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ghost Platform

{
    if BlockDown = noone then if JumpCount = 0 then JumpCount = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Invincibility

{
    if !Invincibility then exit;
    if InvincibilityCount++ &lt; 8 { //Yanıp sönme efektini yarat
        if image_alpha = 1 then image_alpha = 0.25; else image_alpha = 1;
        alarm[0] = 15;
        }
    else { //Ölümsüzlük süresi doldu
        Invincibility = false;
        InvincibilityCount = 0;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Scripts

{
    LastSprite = sprite_index;
    if Focus = "Death" or Focus = "Door" then exit; //Ölmüşsek veya kapıdan geçiyorsak çalıştırma
    scr_JournalInput();
    scr_MagicalSight();
    scr_HorizontalInputs();
    scr_Dash();
    scr_VerticalMovement();
    scr_HorizontalMovement();
    scr_Damage();
    scr_SpriteControl();
    //scr_SoundControl();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Potion">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Potion

{
    switch(other.sprite_index) {
        case spr_PotionHP_Big:
            scr_Potion(snd_PotionHP_Big,c_red,"+ Health Points!");
            obj_HUD.Health = global.HealthMax;
            scr_HUDInteract();
            break;
            
        case spr_PotionHP_Small:
            obj_HUD.Health += 20;
            if obj_HUD.Health &gt; global.HealthMax then obj_HUD.Health = global.HealthMax;
            scr_Potion(snd_PotionHP_Big,c_red,"+ Health Points!");
            scr_HUDInteract();
            break;
            
        case spr_PotionLight:
            with(obj_CharacterLight) {
                LightSizeNew += 150;
                alarm[0] = 1;
                LightPotion++;
                alarm[1] = room_speed*10;
                }
            scr_Potion(snd_PotionLight,c_yellow,"+ Light Radius Increased!");
            scr_HUDInteract();
            break;
            
        case spr_PotionResistance:
            scr_Potion(snd_PotionResistance,c_teal,"+ Resistance Increased!");
            switch(Resistance) {
                case 1:
                    Resistance = 0.75;
                    break;
                    
                case 0.75:
                    Resistance = 0.5;
                    break;
                    
                case 0.5:
                    Resistance = 0.25;
                    break;
                    
                case 0.25:
                    Resistance = 0;
                    break;
                }
            alarm[5] = room_speed*10;
            scr_HUDInteract();
            break;
            
        }
    destroy(other);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Key">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Key

{
    with(other) {
        instance_destroy();
        instance_create(x+16,y+16,obj_KeyEffect);
        if global.KeySound != 4 then global.KeySound++; else global.KeySound = 1;
        scr_PlaySound(asset_get_index("snd_Key" + string(global.KeySound)));
        
        obj_HUD.KeyNumber++;
        if !KeyMonster then scr_Checkpoint(true);
        }
    scr_HUDInteract();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_LifeStone">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Life

{
    scr_PlaySound(snd_LifeStone);
    var Effect = instance_create(other.x+16,other.y+16,obj_ItemEffect);
    with(Effect) image_blend = c_red;
    obj_HUD.Lives++;
    destroy(other);
    scr_HUDInteract();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_MagicEssence">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Magic Essence

{
    //if global.sounds then audio_play_sound(snd_ScoreStone,1,false);
    obj_HUD.MagicEssence++;
    with(other) {
        instance_destroy();
        var Effect = instance_create(x+16,y+16,obj_ItemEffect);
        with(Effect) image_blend = make_colour_rgb(83,110,138);
        scr_Checkpoint(true);
        }
    scr_HUDInteract();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Door">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Door

{
    if other.sprite_index = spr_Door &amp;&amp; Focus = "Character" {
        global.Focus = "Door";
        Focus = global.Focus;
        sprite_index = spr_CharacterDoor;
        image_speed = 1/6;
        image_index = 0;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Checkpoint">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Checkpoint

{
    if global.Checkpoint != other.id {
        with(other)  {
            global.Checkpoint = id;
            alarm[0] = 6;
            }
        }
    if file_exists("Temp.ini") then file_delete("Temp.ini");
    global.TempNumber = 0;
    with(obj_HUD) {
        KeyCheckpoint = KeyNumber;
        MagicEssenceCheckpoint = MagicEssence;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation End

{
    if sprite_index = spr_CharacterDoor { //Kapıdan geçme animasyonu bitmişse
        if room_exists(room_next(room)) then room_goto_next();
        }
    else if sprite_index = spr_CharacterDeath { //Ölme animasyonu bitmişse
        if obj_HUD.Lives &gt; 0 { //Hala canımız var
            scr_Clear();
            if global.Checkpoint = -1 { //Checkpoint açmadık
                x = obj_StartPoint.x;
                y = obj_StartPoint.y;
                }
            else { //Checkpoint açtık
                x = global.Checkpoint.x+40;
                y = global.Checkpoint.y+40;
                }
            scr_ExistenceCheck(); //Objeleri checkpointte kaydedilen hale getir
            with(obj_HUD)  {
                KeyNumber = KeyCheckpoint;
                MagicEssence = MagicEssenceCheckpoint;
                }
            scr_Reborn();
            }
        else game_restart(); //Canımız kalmamış
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Temp

{
    if x &gt; room_width+128 or x &lt; -128 or y &gt; room_height+128 or y &lt; -128 {
        x = xstart;
        y = ystart;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw GUI

{
    var ww = display_get_gui_width();
    var hh = display_get_gui_height();
    display_set_gui_size(view_wport[0],view_hport[0]);
    draw_set_colour(c_black);
    draw_rectangle(view_wport[0]/2-MagicalSightTime,view_hport[0]/2-460-16,view_wport[0]/2+MagicalSightTime,view_hport[0]/2-460,true);
    
    draw_set_colour(c_blue);
    draw_rectangle(view_wport[0]/2-MagicalSightTime+1,view_hport[0]/2-460+1-16,view_wport[0]/2+MagicalSightTime-1,view_hport[0]/2-460-1,false);
    
    display_set_gui_size(view_wport[0]/3,view_hport[0]/3);
    
    if Draw {
        draw_set_colour(c_white);
        draw_set_font(fnt_Calibri_8);
        
        }
    
    display_set_gui_size(ww,hh);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

{
    draw_self();
    //draw_sprite_ext(sprite_index,image_index,x,y,Facing,image_yscale,image_angle,c_white,image_alpha);
    if Draw {
        draw_set_colour(c_red);
        draw_rectangle(x-9,y-17,x+9,y+31,true);
        exit;
        
        //draw_set_colour(c_red); //Yatay
        //draw_rectangle(x,y-19,x+((abs(sprite_xoffset)+8)*dir_sign)+HSpeed,y+abs(sprite_yoffset),true);
        
        draw_set_colour(c_red); //Yatay
        draw_rectangle(x,y-15,x+(8*sign(HSpeed))+HSpeed,y+abs(sprite_yoffset),true);
        
        draw_set_colour(c_green); //Dikey
        draw_rectangle(x-BottomX,y+32,x+BottomX,y+32+VSpeed+1,true);
        
        draw_set_colour(c_yellow); //Dikey
        draw_rectangle(x-BottomX,y-12,x+BottomX,bbox_top+VSpeed,true);
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
