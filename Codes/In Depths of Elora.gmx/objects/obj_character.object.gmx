<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_character_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-25</depth>
  <persistent>0</persistent>
  <parentName>obj_character_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

{
    var_collision = false; //Yere değip değmeme durumu
    jump_speed = -7.25; //Zıplama hızı
    jump_count = 0; //Zıplama sayısı
    jump_max = 2; //En fazla kaç kere zıplayabiliyoruz?
    jump_permission = true; //Zıplama tuşuna basma iznimiz var mı?
    movement_permission = true; //Hareket etme tuşlarına basma iznimiz var mı?
    image_speed = 1/6; //Animasyon hızı   
    bottom_x = 7; //Karakterin yere bastığını belirten taban genişliğinin yarısı
    invincibility = 0; //Hasar alma durumu
    invincibility_count = 0; //Yanıp sönme sayısı
    h_speed = 0; //Yatay hız
    v_speed = 0; //Dikey hız
    dir_sign = 1; //X Scale
    health = 100; //Can barı
    run_speed = 4; //Koşma hızı
    light_potion = 0; //Kaç tane light potion içtik?
    resistance = 1; //Direnç
    step_count[0] = -1; //Sesler için kaç step geçtiğini kontrol eden array
    sprite_change = false; //Sprite'ın değişip değişmediğini kontrol eden değer
    last_sprite = spr_character_idle; //Step başında hangi sprite'a sahip olduğunu kaydeden değer
    
    with(obj_camera)
        {
        x = other.x;
        y = other.y;
        }
    
    event_inherited();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Resistance Potion

{
    resistance = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Light Potion

{
    light_size_new -= (light_potion*150);
    light_potion = 0;
    alarm[3] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Light Potion

{
    if light_size &lt; light_size_new
        {
        light_size++;
        alarm[3] = 1;
        }
    else if light_size &gt; light_size_new
        {
        light_size--;
        alarm[3] = 1;
        }
    else if light_size = light_size_new
        {
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Right After Damage Taking

{
    image_alpha = 0.25;
    alarm[0] = 15;
    jump_permission = true;
    movement_permission = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Jump Count

{
    if block_down != noone
    if jump_count = 0 then jump_count = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Invincibility

{
    if invincibility &amp;&amp; invincibility_count &lt; 9
        {
        if image_alpha = 1 then image_alpha = 0.25; else image_alpha = 1;
        invincibility_count++;
        alarm[0] = 15;
        }
    else
        {
        invincibility = false;
        invincibility_count = 0;
        hspeed = 0;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Scripts

{
    last_sprite = sprite_index;
    if sprite_index = spr_character_door then exit;
    scr_jump();
    scr_keyboard_inputs();
    scr_vertical_movement(true,true);
    scr_horizontal_movement(true);
    scr_sprite_control();
    scr_sound_control();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_potion">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Potion

{
    var effect = instance_create(other.x+16,other.y+16,obj_item_effect);
    switch(other.sprite_index)
        {
        case spr_potion_health_big:
            audio_play_sound(snd_Potion_BigHP,1,false);
            health = global.health_max;
            with(effect) image_blend = c_red;
            break;
            
        case spr_potion_health_little:
            audio_play_sound(snd_Potion_SmallHP,1,false);
            health += 20;
            if health &gt; global.health_max then health = global.health_max;
            with(effect) image_blend = c_red;
            break;
            
        case spr_potion_light:
            audio_play_sound(snd_Potion_Light,1,false);
            light_size_new += 150;
            light_potion++;
            alarm[3] = 1;
            alarm[4] = room_speed*10;
            with(effect) image_blend = c_yellow;
            break;
            
        case spr_potion_resistance:
            audio_play_sound(snd_Potion_Resistance,1,false);
            with(effect) image_blend = c_teal;
            switch(resistance)
                {
                case 1:
                    resistance = 0.75;
                    break;
                    
                case 0.75:
                    resistance = 0.5;
                    break;
                    
                case 0.5:
                    resistance = 0.25;
                    break;
                    
                case 0.25:
                    resistance = 0;
                    break;
                }
            alarm[5] = room_speed*10;
            break;
            
        }
    destroy(other);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_life_stone">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Life

{
    var effect = instance_create(other.x+16,other.y+16,obj_item_effect);
    with(effect) image_blend = c_red;
    lives++;
    destroy(other);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_scorepoint">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Score

{
    with(other)
        {
        instance_destroy();
        var effect = instance_create(x+16,y+16,obj_item_effect);
        with(effect) image_blend = make_colour_rgb(83,110,138);
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_door">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Door

{
    if other.sprite_index = spr_door &amp;&amp; sprite_index != spr_character_door
        {
        sprite_index = spr_character_door;
        movement_permission = false;
        jump_permission = false;
        speed = 0;
        v_speed = 0;
        h_speed = 0;
        image_speed = 1/6;
        image_index = 0;
        x = other.x-9;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_checkpoint">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Checkpoint

{
    if global.checkpoint != other.id
        {
        with(other)
            {
            global.checkpoint = id;
            alarm[0] = 6;
            }
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_environmental_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death

{
    if global.immortality then exit;
    if other.object_index = obj_geyser then exit;
    var type = "Default";
    if invincibility then exit;
    switch(other.object_index)
        {
        case obj_liquid:
            health = 0;
            type = "Liquid";
            break;
            
        case obj_spikes:
            if other.type = "Lethal" then health = 0;
            type = "Spikes";
            break;
            
        case obj_plant:
            type = "Plant";
            break;
            
        case obj_crystal_dark:
            type = "Dark Crystal";
            break;
            
        case obj_drop:
            type = "Drop";
            destroy(other);
            with (other) instance_create(x,y,obj_stream);
            break;
            
        case obj_damast:
            type = "Damast";
            with(other) 
                {
                if sprite_index = spr_damast_explosion then exit;
                scr_monster_death(spr_damast_explosion);
                speed = 0;
                image_blend = blend_col;
                alarm[0] = -1;
                }
            break;
        }
    scr_death(type);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_monster">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death

{
    if global.immortality then exit;
    var type = "Default";
    if invincibility then exit;
    switch(other.object_index)
        {
        case obj_beulian:
            if other.sprite_index = spr_beulian_death then exit;
            type = "Beulian";
            break;
            
        case obj_minyoo:
            if other.sprite_index = spr_minyoo_death then exit;
            type = "Minyoo";
            break;
            
        case obj_palpus:
            if other.sprite_index = spr_palpus_death then exit;
            type = "Palpus";
            break;
            
        case obj_zodax:
            if other.sprite_index = spr_zodax_death then exit;
            type = "Zodax";
            break;
            
        case obj_damast:
            type = "Damast";
            with(other) 
                {
                if sprite_index = spr_damast_explosion then exit;
                scr_monster_death(spr_damast_explosion);
                speed = 0;
                image_blend = blend_col;
                alarm[0] = -1;
                }
            break;
        }
    scr_death(type);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation End

{
    if sprite_index = spr_character_door
        {
        if room_exists(room_next(room)) then room_goto_next();
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Temp

{
    if x &gt; room_width+128 or x &lt; -128 or y &gt; room_height+128 or y &lt; -128
        {
        x = xstart;
        y = ystart;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

{
    draw_self();
    if global.draw
        {
        //draw_set_colour(c_red); //Yatay
        //draw_rectangle(x,y-19,x+((abs(sprite_xoffset)+8)*dir_sign)+h_speed,y+abs(sprite_yoffset),true);
        
        draw_set_colour(c_red); //Yatay
        draw_rectangle(x,y-19,x+(8*sign(h_speed))+h_speed,y+abs(sprite_yoffset),true);
        
        draw_set_colour(c_green); //Dikey
        draw_rectangle(x-bottom_x,y+32,x+bottom_x,y+32+v_speed+1,true);
        
        draw_set_colour(c_yellow); //Dikey
        draw_rectangle(x-bottom_x,y-12,x+bottom_x,bbox_top+v_speed,true);
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="88">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Global Draw

{
    global.draw = reverse(global.draw);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
