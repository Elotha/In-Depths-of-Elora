<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_MinyooWalk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Monster</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

{
    Teleport = false;
    LeftX = -36;
    RightX = 36;
    DetectY = 60;
    image_speed = 1/6;
    Damage = 20;
    alarm[0] = 1;
    HSpeed = sign(image_xscale);
    VSpeed = 0;
    HorLimit = 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Key Monster

{
    with(obj_KeyMonster) if MonsterID = other.id then other.KeyMonster = id;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death

{
    if sprite_index = spr_MinyooDeath {
        scr_MonsterVertical(true);
        scr_MonsterHorizontal(true,false);
        exit;
        }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Vertical Movement &amp; Control

{
    if sprite_index = spr_MinyooWalk or sprite_index = spr_MinyooLines {
    
        //Gittiğimiz yönde blok var mı?
        var Spd;
        if VSpeed != 0 then Spd = sign(VSpeed);
        else Spd = image_yscale;
        BlockVer = instance_place(x,y+ceil(abs(VSpeed))*Spd+Spd,obj_Block);
        
        //Düşüyor muyuz?
        if BlockVer = noone {
            if abs(VSpeed) &lt; FallingLimit {
                VSpeed += FallingSpeed*Spd;
                }
            }
            
        //Yere geldik mi?
        if sign(VSpeed) != 0 {
            if BlockVer != noone {
                if object_is_ancestor(BlockVer.object_index,obj_PlatformThinParent) &amp;&amp; sign(VSpeed) = -1 { //İnce bir platforma aşağıdan yukarıya doğru denk gelmişse
                    y = BlockVer.y-8;
                    sprite_index = spr_MinyooTeleportationUp2;
                    image_index = 0;
                    image_speed = 1/3;
                    VSpeed = 0;
                    HSpeed = 0;
                    exit;
                    }
                if sign(VSpeed) = -1 { //Yukarı doğru gidiyorsa sprite ve derinlik ayarlamalarını yap
                    image_yscale = -1;
                    depth = PLATFORM+50;
                    }
                move_contact_solid(180+(90*sign(VSpeed)),ceil(abs(VSpeed)));
                sprite_index = spr_MinyooWalk;
                VSpeed = 0;
                HSpeed = image_xscale;
                Teleport = false;
                image_speed = 1/6;
                }
            }
            
    //Hareketi gerçekleştir
    y += VSpeed;
    }
    
    if !Teleport &amp;&amp; BlockVer != noone &amp;&amp; abs(VSpeed) &lt; 1 {
        if !obj_Character.MagicalSight {
            //Karakter tespiti
            var Character;
            Character = collision_rectangle(x-16,bbox_bottom,x+16,y+DetectY,obj_Character,false,true); //Aşağıya doğru karakter tespiti
            if Character != noone {
                if !Character.Invincibility &amp;&amp; Character.y &gt; y { //Karakter tespit edilmeye müsait mi ve aşağıda olduğuna emin miyiz?
                    if image_yscale = -1 { //Bloğun altında geziniyor
                        image_yscale = 1;
                        image_speed = 0; 
                        y += 2;
                        depth = MONSTER;
                        }
                    else { //Bloğun üstünde geziniyor
                        sprite_index = spr_MinyooTeleportationDown;
                        image_speed = 1/3;
                        }
                    Teleport = true;
                    VSpeed = 0;
                    HSpeed = 0;
                    image_index = 0;
                    exit;
                    }
                }
            else {
                if image_yscale = 1 {
                    Character = collision_rectangle(x-16,bbox_top,x+16,bbox_top-DetectY,obj_Character,false,true); //Yukarı doğru karakter tespiti
                    if Character != noone {
                        if !Character.Invincibility &amp;&amp; Character.y &lt; y { //Karakter tespit edilmeye müsait mi ve yukarıda olduğuna emin miyiz?
                            Teleport = true;
                            VSpeed = 0;
                            HSpeed = 0;
                            image_index = 0;
                            sprite_index = spr_MinyooTeleportationUp;
                            image_speed = 1/3;
                            exit;
                            }
                        }
                    }
                }
            }
            
        //Gittiği yönde blok bitiyor mu?
        var BlockLeft = collision_rectangle(x-24,y,x+LeftX,y+(24*image_yscale),obj_Block,false,true);
        var BlockRight = collision_rectangle(x+24,y,x+RightX,y+(24*image_yscale),obj_Block,false,true);
        if (BlockLeft != noone &amp;&amp; BlockRight = noone) {
            HSpeed = -1;
            image_xscale = -1;
            }
            
        if BlockLeft = noone &amp;&amp; BlockRight != noone {
            HSpeed = 1;
            image_xscale = 1;
            }
        }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement

{
    if !Teleport {
        //Altında blok yoksa sürtünmeden etkilensin
         if BlockVer = noone {
            if HSpeed &gt; 0 then HSpeed = max(HSpeed+Friction*sign(HSpeed),0);
            if HSpeed &lt; 0 then HSpeed = min(HSpeed+Friction*sign(HSpeed),0);
            }
            
        //Gittiği yatay yön serbest mi?
        if abs(HSpeed) &gt; 0 {
            BlockHor = instance_place(x+HSpeed+sign(HSpeed),y,obj_Block);
            if BlockHor != noone {
                move_contact_solid(90+(90*-sign(HSpeed)),HSpeed);
                if VSpeed = 0 {
                    image_xscale = -image_xscale;
                    HSpeed = image_xscale;
                    }
                }
            }
            
        //Yatay hareketi gerçekleştir
        x += HSpeed;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Monster">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death

{
    if other.object_index = obj_Palpus || (other.object_index = obj_Damast &amp;&amp; other.sprite_index = spr_DamastExplosion) {
        scr_MonsterDeath(spr_MinyooDeath);
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Geyser">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death

{
    scr_MonsterDeath(spr_MinyooDeath);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Environment">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death

{
    scr_MonsterDeath(spr_MinyooDeath);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation End

{
    switch(sprite_index) {
        case spr_MinyooDeath: //Ölüyor
            scr_MonsterCorpse();
            break;
        
        case spr_MinyooTeleportationDown2: //Aşağı düşmeye başlama
            sprite_index = spr_MinyooWalk;
            image_speed = 0;
            break;
        
        case spr_MinyooTeleportationDown:  //Aşağısındaki bloğu ışınlanarak atlatma
            var Block = instance_place(x,y+8,obj_Block);
            var i = 48;
            if Block != noone then i = max((Block.image_yscale*8)+16,48);
            y += i;
            sprite_index = spr_MinyooTeleportationDown2;
            image_index = 0;
            image_speed = 1/3;
            break;
            
        case spr_MinyooTeleportationUp: //Yukarı yükselmeye başlayacak
            sprite_index = spr_MinyooLines;
            VSpeed -= FallingSpeed;
            break;
            
        case spr_MinyooTeleportationUp2: //Yukarı doğru ince bir bloktan atladı ve oluştu
            sprite_index = spr_MinyooWalk;
            HSpeed = image_xscale;
            image_speed = 1/6;
            Teleport = false;
            break;            
        }    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

{
    draw_self();
    if Draw {
        draw_set_colour(c_green);
        draw_rectangle(x-24,y,x+LeftX,y+24*image_yscale,true);
        draw_rectangle(x+24,y,x+RightX,y+24*image_yscale,true);
        
        draw_set_colour(c_yellow);
        draw_rectangle(x-24+8,bbox_bottom,x+24-8,y+DetectY,true);
        draw_rectangle(x-24+8,bbox_top,x+24-8,bbox_top-DetectY,true);
        
        draw_set_colour(c_lime);
        draw_line(x+((24-8)*image_xscale),y,x+((24+16)*image_xscale),y);
        
        draw_set_colour(c_white);
        draw_rectangle(x-24,y,x+24,y+(12*sign(vspeed))+vspeed,true);
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
