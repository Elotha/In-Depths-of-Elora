<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-100000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

{
    EditorMode = true; //Editör modu
    global.Immortality = false; //Ölümsüzlük modu
    global.Draw = false; //Debug Draw modu
    global.MessagePermission = true; //Debug mesajı çıkabilir mi?
    Debug = false; //Debug overlay modu
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Everything

{
    if keyboard_check_pressed(vk_f12) then game_end(); //Oyunu kapat
    if keyboard_check_pressed(vk_f5) { //Oyunu yeniden başlat
        scr_Clear();
        audio_stop_all();
        game_restart();
        exit;
        }
    if keyboard_check_pressed(vk_f1) { //Editör modunu aç-kapa
        if keyboard_check(vk_control) then EditorMode = !EditorMode;
        }
        
    if keyboard_check_pressed(vk_f2) { //Debug overlay modu
        Debug = !Debug;
        show_debug_overlay(Debug);
        }
        
    if keyboard_check_pressed(vk_f11) { //Screenshot
        var i = 0;
        while file_exists("Screenshot_" + string(i) + ".png") i++;
        screen_save("Screenshot_" + string(i) + ".png");
        }
        
    if !EditorMode then exit; //Editör modu kapalıysa devam etme
    
    if room = rm_Menu then if obj_MainMenu.MenuCurrent = "Controls" || obj_MainMenu.MenuCurrent = "New Profile" then exit;
    
    if keyboard_check_pressed(vk_f4) { //Bölümü yeniden başlat
        with(obj_HUD)  SoulPower = obj_HUD.SoulPowerMax;
        global.Checkpoint = -1;            
        scr_Clear();
        room_restart();
        exit;
        }
        
    if keyboard_check_pressed(vk_add) { //Sonraki odaya git
        if room_exists(room_next(room)) {
            scr_Clear();
            room_goto_next();
            exit;
            }
        }
    if keyboard_check_pressed(vk_subtract) { //Önceki odaya git
        if room_exists(room_previous(room)) {
            scr_Clear();
            room_goto_previous();
            exit;
            }
        }
        
    if keyboard_check_pressed(vk_f7) { //global.Message permission
        global.MessagePermission = !global.MessagePermission;
        }
    
    if keyboard_check_pressed(vk_f3) { //Oyunu yavaşlat ya da normal hızına getir
        if room_speed = 60 then room_speed = 2; else room_speed = 60;
        }
        
    if Menu then exit;
        
    if keyboard_check_pressed(ord('Y')) { //Anahtar kazan
        with(obj_HUD) KeyNumber[GOLDEN]++;
        }
        
     if keyboard_check_pressed(ord('X')) { //Global draw modunu aç-kapa
        global.Draw = !global.Draw;
        with(obj_Character) Draw = global.Draw;
        with(obj_Monster) Draw = global.Draw;
        }
        
     if keyboard_check_pressed(ord('V')) { //Blokları görünür-görünmez yap
        with(obj_Block) if !object_is_ancestor(id.object_index,obj_BlockThinParent) visible = !visible;
        with(obj_BlockThin) visible = !visible;
        }
        
     if keyboard_check_pressed(ord('P')) { //Karakteri zorla doğdur - serbest doğdur
        global.ForceStart = !global.ForceStart;
        }
        
     if keyboard_check_pressed(ord('L')) { //Hak sayısını arttır ve canı fulle
        obj_HUD.Lives++;
        obj_HUD.SoulPower = obj_HUD.SoulPowerMax;
        }
        
     if keyboard_check_pressed(ord('B')) {
        obj_HUD.MagicEssence++;
        }
        
     if keyboard_check_pressed(ord('I')) { //Ölümsüzlüğü aç-kapa
        global.Immortality = !global.Immortality;
        }
        
     if keyboard_check(ord('C')) { //V-Sync
        with(obj_System) {
            VSync = !VSync;
            display_reset(0,VSync);
            }
        }
        
     if keyboard_check(ord('O')) { //Canı azalt
        obj_HUD.SoulPower--;
        if obj_HUD.SoulPower &lt;= 0 then with (obj_Character) {
            scr_Death();
            scr_HUDInteract(); //Eğer HUD sadece etkileşim anında gözükür olarak ayarlanmışsa
            if MagicalSight then scr_MagicalSightClose();
            }
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu Room

{
    Menu = (room == rm_Menu);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
