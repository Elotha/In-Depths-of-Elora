<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

//drop = 0 ise canavar öldüğü zaman hiçbir şey düşürmez.
//drop = 1 ise rastgele bir potion düşürür.

{
    if object_index = obj_Palpus then drop = "0"; else drop = "1";
    alarm[11] = 1; //obj_key_monster oluşturma işi
    if object_index != obj_Damast then depth = MONSTER;
    falling_speed = global.falling_speed;
    falling_limit = global.falling_limit;
    draw = global.draw;
    creation_code = false;
    initial_xscale = image_xscale;
    v_speed = 0;
    h_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drop

//Burada canavar öldüğü zaman drop değerine göre ne düşüreceğini belirleyen kodlar var.

{
    switch(object_index)
        {
        case obj_Beulian:
            xx = x-16;
            yy = y-16;
            break;
            
        case obj_Damast:
            xx = x;
            yy = y-8;
            break;
            
        case obj_Minyoo:
            xx = x-24;
            yy = y-24;
            break;
            
        case obj_Zodax:
            xx = x-16;
            yy = y-24;
            break;
            
        default:
            xx = x;
            yy = y;
            
        }
        
    var item = -4;
    switch(drop)
        {
        case "1":
            var rnd = irandom(100);
            if rnd &lt; 25 then instance_create(xx,yy,obj_Potion);
            break;
            
        case "HP Small":
            item = instance_create(xx,yy,obj_Potion);
            with(item) sprite_index = spr_PotionHP_Small;
            break;
            
        case "HP Big":
            item = instance_create(xx,yy,obj_Potion);
            with(item) sprite_index = spr_PotionHP_Big;
            break;
            
        case "Resistance":
            item = instance_create(xx,yy,obj_Potion);
            with(item) sprite_index = spr_PotionResistance;
            break;
            
        case "Light":
            item = instance_create(xx,yy,obj_Potion);
            with(item) sprite_index = spr_PotionLight;
            break;
            
        case "Key":
            with(obj_KeyMonster)
                {
                if monster_id = other.id //monster_id değeri, obj_key_monster'ın hangi canavara ait olduğunu tutar.
                    {
                    item = instance_create(x-16,y-16,obj_Key);
                    with(item) 
                        {
                        vspeed = 1.4;
                        friction = 0.1;
                        key_monster = true;
                        }
                    instance_destroy();
                    }
                }
            break;
        }
    with(item) scr_checkpoint(false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Key Monster

{
    if drop = "Key"
        {
        var key = instance_create(x,y,obj_KeyMonster);
        with(key)
            {
            monster_id = other.id;
            monster_type = object_get_name(other.object_index);
            }
        }
    initial_xscale = image_xscale;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
