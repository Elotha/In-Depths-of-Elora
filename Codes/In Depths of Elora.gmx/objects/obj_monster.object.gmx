<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

//Drop = 0 ise canavar öldüğü zaman hiçbir şey düşürmez.
//Drop = 1 ise rastgele bir potion düşürür.

{
    if object_index = obj_Palpus then Drop = "0"; else Drop = "1";
    alarm[11] = 1; //obj_key_monster oluşturma işi
    if object_index != obj_Damast then depth = MONSTER;
    FallingSpeed = global.FallingSpeed;
    FallingLimit = global.FallingLimit;
    Friction = global.Friction;
    Draw = global.Draw;
    InitialXScale = image_xscale;
    SoulStone = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drop

//Burada canavar öldüğü zaman Drop değerine göre ne düşüreceğini belirleyen kodlar var.

{
    switch(object_index) {
        case obj_Beulian:
            xx = x-16;
            yy = y-16;
            break;
            
        case obj_Damast:
            xx = x;
            yy = y-8;
            break;
            
        case obj_Minyoo:
            xx = x-24;
            yy = y-24;
            break;
            
        case obj_Zodax:
            xx = x-16;
            yy = y-24;
            break;
            
        default:
            xx = x;
            yy = y;
        }
        
    var Item = false;
    switch(Drop) {
        case "1":
            var Rnd = irandom(100);
            if Rnd &lt; 25 then instance_create(xx,yy,obj_Potion);
            break;
            
        case "HP Small":
            Item = instance_create(xx,yy,obj_Potion);
            with(Item) sprite_index = spr_PotionHP_Small;
            break;
            
        case "HP Big":
            Item = instance_create(xx,yy,obj_Potion);
            with(Item) sprite_index = spr_PotionHP_Big;
            break;
            
        case "Resistance":
            Item = instance_create(xx,yy,obj_Potion);
            with(Item) sprite_index = spr_PotionResistance;
            break;
            
        case "Light":
            Item = instance_create(xx,yy,obj_Potion);
            with(Item) sprite_index = spr_PotionLight;
            break;
        }
    if string_copy(Drop,1,3) = "Key" {
        with(obj_KeyMonster) {
            if MonsterID = other.id { //monster_id değeri, obj_key_monster'ın hangi canavara ait olduğunu tutar.
                switch(sprite_index) {
                    case spr_KeyMonsterGolden:
                        Item = instance_create(x-16,y-16,obj_KeyGolden);
                        break;
                        
                    case spr_KeyMonsterSilver:
                        Item = instance_create(x-16,y-16,obj_KeySilver);
                        break;
                        
                    case spr_KeyMonsterGray:
                        Item = instance_create(x-16,y-16,obj_KeyGray);
                        break;
                        
                    case spr_KeyMonsterBlue:
                        Item = instance_create(x-16,y-16,obj_KeyBlue);
                        break;
                    }
                with(Item) {
                    vspeed = 1.4;
                    friction = 0.1;
                    KeyMonster = true;
                    }
                instance_destroy();
                break;
                }
            }
        }
    if Item != 0 then with(Item) scr_Checkpoint(false);
    if SoulStone != -1 then destroy(SoulStone);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Key Monster

{
    if string_copy(Drop,1,3) = "Key" {
        var Key = instance_create(x,y,obj_KeyMonster);
        with(Key) {
            MonsterID = other.id;
            MonsterType = object_get_name(other.object_index);
            switch(other.Drop) {
                case "Key Golden":
                    sprite_index = spr_KeyMonsterGolden;
                    break;
                    
                case "Key Silver":
                    sprite_index = spr_KeyMonsterSilver;
                    break;
                    
                case "Key Gray":
                    sprite_index = spr_KeyMonsterGray;
                    break;
                    
                case "Key Blue":
                    sprite_index = spr_KeyMonsterBlue;
                    break;
                }
            }
        }
    InitialXScale = image_xscale;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
