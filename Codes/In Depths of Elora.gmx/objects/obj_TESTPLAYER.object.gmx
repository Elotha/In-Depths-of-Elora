<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_TEST_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//init font
global.fnt_textbox=font_add_sprite_ext(spr_fontmain," !"+'"'+"'()*,-./0123456789:;?ABCDEFGHIJKLMNOPQRSTUVWXYZ^_abcdefghijklmnopqrstuvwxyz",1,1);

DIR_RIGHT=0;
DIR_UP=1;
DIR_LEFT=2;
DIR_DOWN=3;

//This is old code from when I was trying various styles out.
//It might have glitches, but it's only for demonstration, so deal with it
keyUp=vk_up;
keyDown=vk_down;
keyLeft=vk_left;
keyRight=vk_right;

keyPressedUp=0;
keyPressedDown=0;
keyPressedLeft=0;
keyPressedRight=0;

canMove=1;
preMoveWaitTime=0;
preMoveWaitTimeNeeded=7;
arrowKeysPushed=0;
move_snap(16,16);

spriteAnimSpeed=.05;
image_speed=spriteAnimSpeed;

charSprite[DIR_RIGHT]=spr_TEST_right;
charSprite[DIR_UP]=spr_TEST_up;
charSprite[DIR_LEFT]=spr_TEST_left;
charSprite[DIR_DOWN]=spr_TEST_down;

direction=270;
spriteDir=direction/90;

textbox_create("intro.txt",1,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enable movement after textbox is destroyed

if (!instance_exists(obj_textbox)) {
  canMove=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keyPressedUp=keyboard_check(keyUp);
keyPressedDown=keyboard_check(keyDown);
keyPressedLeft=keyboard_check(keyLeft);
keyPressedRight=keyboard_check(keyRight);

spriteDir=direction/90;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check keys for stopping

arrowKeysPressed=(keyPressedUp || keyPressedDown || keyPressedLeft || keyPressedRight)

if (place_snapped(16,16) &amp;&amp; !arrowKeysPressed) {
  speed=0;
  preMoveWaitTime=0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check keys for movement

if (canMove) {
  if (keyPressedLeft) {
    if (place_snapped(16,16) &amp;&amp; canMove) {
      direction=180;
      if (preMoveWaitTime&lt;preMoveWaitTimeNeeded) {
        preMoveWaitTime+=1;
      }
      else {
        speed=1;
      }
    }
  }
  
  if (keyPressedUp) {
    if (place_snapped(16,16) &amp;&amp; canMove) {
      direction=90;
      if (preMoveWaitTime&lt;preMoveWaitTimeNeeded) {
        preMoveWaitTime+=1;
      }
      else {
        speed=1;
      }
    }
  }
  
  if (keyPressedRight) {
    if (place_snapped(16,16) &amp;&amp; canMove) {
      direction=0;
      if (preMoveWaitTime&lt;preMoveWaitTimeNeeded) {
        preMoveWaitTime+=1;
      }
      else {
        speed=1;
      }
    }
  }
  
  if (keyPressedDown) {
    if (place_snapped(16,16) &amp;&amp; canMove) {
      direction=270;
      if (preMoveWaitTime&lt;preMoveWaitTimeNeeded) {
        preMoveWaitTime+=1;
      }
      else {
        speed=1;
      }
    }
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_TESTBLOCK">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop moving

speed=0;
move_snap(16,16); //A terrible, terrible kludge, but in the end it's probably faster than the fix

//OK, it's probably not, but this isn't made for speed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(charSprite[spriteDir],image_index,x,y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (canMove &amp;&amp; speed==0) {
  switch(spriteDir) {
    case 0: { //Right
      if (place_meeting(x+16,y,obj_TESTNPC)) { //NPC CHECK
        canMove=0;
        with (instance_place(x+16,y,obj_TESTNPC)) {
          event_user(0);
        }
      }
    } break;
    case 1: { //Up
      if (place_meeting(x,y-16,obj_TESTNPC)) { //NPC CHECK
        canMove=0;
        with (instance_place(x,y-16,obj_TESTNPC)) {
          event_user(0);
        }
      }
    } break;
    case 2: { //Right
      if (place_meeting(x-16,y,obj_TESTNPC)) { //NPC CHECK
        canMove=0;
        with (instance_place(x-16,y,obj_TESTNPC)) {
          event_user(0);
        }
      }
    } break;
    case 3: { //Down
      if (place_meeting(x,y+16,obj_TESTNPC)) { //NPC CHECK
        canMove=0;
        with (instance_place(x,y+16,obj_TESTNPC)) {
          event_user(0);
        }
      }
    } break;
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
