<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

{
    image_speed = 0;
    Proximity = false;
    ProximityPrevious = false;
    Locked = true;
    Col = make_colour_rgb(112,97,166);
    alarm[0] = 10; //Distance check
    alarm[1] = 1; //Door block
    depth = CHARACTER+50;
    Double = false;
    Unlock = false;
    LockY = 0;
    LockSpeed = 2;
    LockAlpha = 1;
    DoorBlockX = 48;
    DoorBlockY = 32;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Door Block

{
    DoorBlock = collision_rectangle(x,y,x+DoorBlockX*image_xscale,y+DoorBlockY,obj_DoorBlock,false,true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Distance Control

{
    var Distance, DistanceDouble;
    Distance = point_distance(x,y+12,obj_Character.x,obj_Character.y);
    if Double then DistanceDouble = point_distance(x+(32*Length*image_xscale),y+12,obj_Character.x,obj_Character.y);
    else DistanceDouble = 256;
    if (Distance &lt; 128 or DistanceDouble &lt; 128) then Proximity = true; else Proximity = false;

    if Proximity != ProximityPrevious {
        if Proximity {
            image_speed = 1/5;
            }
        if !Proximity {
            image_speed = -1/5;
            }
        }
    ProximityPrevious = Proximity;
    alarm[0] = 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Light

{
    create_light(128,Col,x+8,y+14);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Unlocking

{
    if Locked then if Unlock {
        Locked = false;
        }
    if !Locked {
        if image_index = image_number-1 {
            if DoorBlock != noone then if DoorBlock.object_index = obj_DoorBlock {
                with(DoorBlock) instance_change(obj_DoorBlockPlaceholder,false);
                }
            }
        else {
            if DoorBlock != noone then if DoorBlock.object_index = obj_DoorBlockPlaceholder {
                with(DoorBlock) instance_change(obj_DoorBlock,false);
                }
            }
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation End

{
    if sign(image_speed) = -1 {
        image_index = 0;
        image_speed = 0;
        }
    if sign(image_speed) = 1 {
        image_speed = 0;
        image_index = image_number-1;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

{
    draw_self();
    if Double {
        draw_sprite_ext(sprite_index,image_index,x+(Length*32*image_xscale),y,-image_xscale,1,0,c_white,image_alpha);
        }
    if Locked {
        if image_index &gt;= 7 {
            draw_sprite_ext(spr_DoorLock,0,x,y,image_xscale,1,0,c_white,(image_index-7)*1/8);
            if Double then draw_sprite_ext(spr_DoorLock,0,x+(Length*32*image_xscale),y,-image_xscale,1,0,c_white,(image_index-7)*1/8);
            }
        }
    else if Unlock {
        LockY += LockSpeed;
        if LockAlpha &gt; 0 {
            LockAlpha -= 0.1;
            }
        else Unlock = false;
        
        draw_sprite_ext(spr_DoorLock,0,x,y+LockY,image_xscale,1,0,c_white,LockAlpha);
        if Double then draw_sprite_ext(spr_DoorLock,0,x+(Length*32*image_xscale),y+LockY,-image_xscale,1,0,c_white,LockAlpha);
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
