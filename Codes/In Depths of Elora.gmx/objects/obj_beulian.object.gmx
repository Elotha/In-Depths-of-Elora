<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_BeulianRun</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Monster</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create
//
//range değeri beulian'ın ne kadar uzağa gidip geri döneceğini belirtir. (range*16 piksel)

{
    image_speed = 1/6;
    alarm[1] = 1;
    pursuit = false;
    motion_set(0,1);
    xx1 = 24;
    yy1 = -20;
    xx2 = 128;
    yy2 = 32;
    damage = 20;
    collision = false;
    second_arrow = false;
    event_inherited();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision

{
    collision = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision

{
    collision = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reverse

{
    if sprite_index = spr_BeulianAttack
        {
        sprite_index = spr_BeulianRun;
        image_index = 0;
        }
    hspeed = -hspeed;
    image_xscale = -image_xscale;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step

{
    if sprite_index = spr_BeulianDeath then exit;
    var char = collision_rectangle(x+(xx1*image_xscale),y+yy1,x+(xx2*image_xscale),y+yy2,obj_Character,false,true);
    if char != noone //Takip durumunu kontrol et, karakter varsa takibe başla
        {
        if !char.invincibility
            if !pursuit
                {
                pursuit = true;
                image_speed = 1/3;
                alarm[0] = -1;
                }
        }
    if pursuit &amp;&amp; instance_number(obj_Character) != 0 //İvme kazan
        {
        if speed &lt; 4 then speed += 0.25;
        if abs(obj_Character.x-x) &lt; 96
            {
            if sprite_index != spr_BeulianAttack
                {
                sprite_index = spr_BeulianAttack;
                image_index = 0;
                }
            }
        }
    
    if pursuit //Takip varsa, okları kontrol et, önündeki ve aşağındaki duvarı kontrol et, karakter görüş alanından çıkarsa takibi bırak
        {
        var arrow = instance_place(x,y,obj_BeulianArrow) //Ok kontrolü
        if arrow != noone &amp;&amp; !second_arrow
            {
            arrow.last_dir = arrow.image_index;
            arrow.image_index = 2;
            second_arrow = true;
            }
        var block_down = collision_rectangle(x+(21*image_xscale),y+14,x+((32+21)*image_xscale),y+46,obj_Block,false,true); //Aşağıda blok var mı?
        var block_ahead = collision_line(x,y+8,x+image_xscale*32,y+8,obj_Block,false,true); //Karşında blok var mı?
        if char = noone || (char != noone &amp;&amp; char.invincibility) || block_down = noone || block_ahead != noone //Karakter görüş alanından çıkmışsa, karakter ölümsüzse veya aşağıda blok yoksa
            {
            pursuit = false;
            speed = 1;
            image_speed = 1/6;
            if sprite_index = spr_BeulianAttack
                {
                sprite_index = spr_BeulianRun;
                image_index = 0;
                }
            if second_arrow
                {
                hspeed = -hspeed;
                image_xscale = -image_xscale;
                }
            }
        }
    else //Takip yoksa ne zaman oklara çarpıp döneceğini kontrol et
        {
        var arrow = instance_place(x,y,obj_BeulianArrow)
        if arrow != noone &amp;&amp; collision = false
            {
            if arrow.image_index = RIGHT &amp;&amp; image_xscale = -1
                {
                image_xscale = 1
                hspeed = abs(hspeed);
                }
            
            else if arrow.image_index = LEFT &amp;&amp; image_xscale = 1
                {
                image_xscale = -1
                hspeed = -abs(hspeed);
                }
            else if arrow.image_index = 2 then with(arrow)
                {
                image_index = last_dir;
                other.second_arrow = false;
                }
            }
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Monster">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Monster Death

{
    if !(other.object_index = obj_Damast &amp;&amp; other.sprite_index = spr_DamastExplosion) 
    || !(other.object_index = obj_Minyoo &amp;&amp; other.sprite_index = spr_MinyooTeleportation) then exit;
    scr_monster_death(spr_BeulianDeath);
    alarm[0] = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Environment">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Monster Death

{
    scr_monster_death(spr_BeulianDeath);
    if image_speed = 1/3 then image_speed = 1/6;
    alarm[0] = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation End

{
    if sprite_index = spr_BeulianAttack
        {
        sprite_index = spr_BeulianRun;
        image_index = 0;
        }
    if sprite_index = spr_BeulianDeath &amp;&amp; image_speed != 0
        {
        scr_monster_corpse();
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

{
    draw_self();
    if draw
        {
        draw_set_colour(c_yellow);
        draw_rectangle(x+(xx1*image_xscale),y+yy1,x+(xx2*image_xscale),y+yy2,true);
        
        draw_set_colour(c_green);
        draw_rectangle(x+(21*image_xscale),y+30,x+((32+21)*image_xscale),y+62,true);
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
