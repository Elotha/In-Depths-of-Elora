<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-500</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

{
    with(obj_CharacterParent) movement_permission = false;
    roll_dir = 1;
    cursor_sprite = spr_JournalMouse;
    tab_current = "Roll";
    
    journal_alpha = 0;
    journal_dir = 1;
    logo_index = 0;
    frate = global.frame_rate;
    tabs_alpha = 0;
    
    image_speed = 0;
    ww = display_get_gui_width();
    hh = display_get_gui_height();
    journal_key = global.control[controlkeys.journal];

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy

{
    cursor_sprite = -1;
    with(obj_CharacterParent) movement_permission = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Journal Key

{
    if keyboard_check_pressed(journal_key) &amp;&amp; journal_dir != -1
        {
        journal_dir = -1;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Statistics

{
    statistics_arrow[0] = instance_create(view_xview[0]+view_wview[0]/2-1,view_yview[0]+view_hview[0]/2-110+8,obj_JournalArrowBig); //Yukarı ok
    statistics_arrow[1] = instance_create(view_xview[0]+view_wview[0]/2-1,view_yview[0]+view_hview[0]/2+110+24,obj_JournalArrowBig); //Aşağı ok
    with(statistics_arrow[1]) 
        {
        image_index = 1;
        image_angle = 180;
        }
        
    statistics_offset = 0;
    sprh = sprite_get_height(spr_JournalStatisticsFrames);
    enum statistics
        {
        hurts,
        deaths,
        steps,
        profile_time,
        game_time,
        score_stones,
        potions,
        st_lives,
        }
    
    statistics_questions[statistics.hurts] = "How many times did you hurt?";
    statistics_questions[statistics.deaths] = "How many times did you die?";
    statistics_questions[statistics.steps] = "How many steps did you take?";
    statistics_questions[statistics.profile_time] = "How long do you play in this profile?";
    statistics_questions[statistics.game_time] = "How long do you play the game?";
    statistics_questions[statistics.score_stones] = "How many blue stones did you take?";
    statistics_questions[statistics.potions] = "How many potions did you take?";
    statistics_questions[statistics.st_lives] = "How many lives did you take?";
    
    statistics_answers[statistics.hurts] = 0;
    statistics_answers[statistics.deaths] = 1;
    statistics_answers[statistics.steps] = 2;
    statistics_answers[statistics.profile_time] = 3;
    statistics_answers[statistics.game_time] = 4;
    statistics_answers[statistics.score_stones] = 5;
    statistics_answers[statistics.potions] = 6;
    statistics_answers[statistics.st_lives] = 7;
    
    statistics_index = 0;
    statistics_max = array_length_1d(statistics_questions)-4;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Achievements

{
    //Değişkenler
    achh = sprite_get_height(spr_JournalSquare);
    achw = sprite_get_width(spr_JournalSquare);
    ach_sep = 47; //Achievements kısmındaki girdilerin birbirine olan piksel uzaklığı
    achievement_number = 0; //Kaçıncı achievementtayız?
    achievements_page = 0; //Kaçıncı sayfadayız?
    achievements_max = 11; //Toplam achievement sayısı
    achievements_page_max = floor(achievements_max/16); //Maksimum sayfa sayısı kaç?
    
    //Achievement kareleri
    var q, w, number;
    for(q = 0; q &lt; 4; q++)
        {
        for(w = 0; w &lt; 4; w++)
            {
            number = q*4+w;
            ach[number] = instance_create(view_xview[0]+view_wview[0]/2-(2*ach_sep)+(w*ach_sep)+26,view_yview[0]+view_hview[0]/2-(2*ach_sep)+(q*ach_sep)+9,obj_JournalAchievementsSquare);
            ach[number].number = number;
            if ach[number].number &gt;= achievements_max then with(ach[number]) sprite_index = -1;
            }
        }
        
    //Oklar
    achievements_arrow[0] = instance_create(view_xview[0]+view_wview[0]/2+109,view_yview[0]+view_hview[0]/2-13,obj_JournalAchievementsArrow); //Sağdaki ok
    if achievements_page_max &gt; 0 then with(achievements_arrow[0]) image_index = 1;
    achievements_arrow[1] = instance_create(view_xview[0]+view_wview[0]/2-106,view_yview[0]+view_hview[0]/2-13,obj_JournalAchievementsArrow); //Soldaki ok
    with(achievements_arrow[1]) image_xscale = -1;
        
    //Başarım listesi
    achievement_name[0] = "PALPUS DOMINATOR";
    achievement_description[0] = "Kill a palpus.";
    
    achievement_name[1] = "GREED OF POWER";
    achievement_description[1] = "Try to be a goddess.";
    
    for(var e = 2; e &lt; achievements_max; e++)
        {
        achievement_name[e] = "ACHIEVEMENT TITLE";
        achievement_description[e] = string(e);
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Last Dialogues

{        
    ///Değişkenler
    last_dialogues_sep = 16;
    last_dialogues_str[0] = "S";
    last_dialogues_str[1] = "S #S";
    last_dialogues_str[2] = "S #S #S";
    last_dialogues_str[3] = "S #S #S #S";
    last_dialogues_str[4] = "S #S #S #S #S";
    
    last_dialogues_offset = 0;
    
    
    //Oklar
    last_dialogues_arrow[0] = instance_create(view_xview[0]+view_wview[0]/2-1,view_yview[0]+view_hview[0]/2-110+8-6,obj_JournalArrowBig); //Yukarı ok
    last_dialogues_arrow[1] = instance_create(view_xview[0]+view_wview[0]/2-1,view_yview[0]+view_hview[0]/2+110+24-2,obj_JournalArrowBig); //Aşağı ok
    with(last_dialogues_arrow[1]) image_yscale = -1;
    
    //Last Dialogues
    /*for(var i = 0; i &lt; 10; i++)
    last_dialogues[i] = string(i) + " Wizard said, I am going to need this parchment. It was his #masterpiece and lifetime work. But he couldn't upload all the #data I need. He said I have to find pomegranate flower and #some stones that have magic essence."; 
    */
    
    last_dialogues[0] = "0 Wizard said, I am going to need this parchment. It was his #masterpiece and lifetime work. But he couldn't upload all the #data I need. He said I have to find pomegranate flower and #some stones that have magic essence."; 
    last_dialogues[1] = "1 Wizard said, I am going to need this parchment. It was his #masterpiece and lifetime work. But he couldn't upload all the #data I need.";    
    last_dialogues[2] = "2 Wizard said, I am going to need this parchment.";
    last_dialogues[3] = "3 Wizard said, I am going to need this parchment. It was his #masterpiece and lifetime work. But he couldn't upload all the #data I need. He said I have to find pomegranate flower and #some stones that have magic essence."; 
    last_dialogues[4] = "4 Wizard said, I am going to need this parchment. It was his #masterpiece and lifetime work. But he couldn't upload all the #data I need.";
    last_dialogues[5] = "5 Wizard said, I am going to need this parchment. It was his #masterpiece and lifetime work. But he couldn't upload all the #data I need. He said I have to find pomegranate flower and #some stones that have magic essence.";
    last_dialogues[6] = "6 Wizard said, I am going to need this parchment. It was his #masterpiece and lifetime work. But he couldn't upload all the #data I need. He said I have to find pomegranate flower and #some stones that have magic essence.";
    last_dialogues[7] = "7 Wizard said, I am going to need this parchment. It was his #masterpiece and lifetime work. But he couldn't upload all the #data I need. He said I have to find pomegranate flower and #some stones that have magic essence.";
    last_dialogues[8] = "8 Wizard said, I am going to need this parchment.";
    last_dialogues[9] = "9 Wizard said, I am going to need this parchment. It was his #masterpiece and lifetime work. But he couldn't upload all the #data I need. He said I have to find pomegranate flower and #some stones that have magic essence."; 
    
    //Update Dialogues
    scr_last_dialogues_update(true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tabs

{
    var j = 0;
    for(var k = 0; k &lt; 4; k++)
        {
        main_tabs[k] = instance_create(view_xview[0]+view_wview[0]/2-120+j,view_yview[0]+view_hview[0]/2-152,obj_JournalTab);
        j += sprite_get_width(spr_JournalTab);
        }
    with(main_tabs[0]) type = "Entries";
    with(main_tabs[1]) type = "Last Dialogues";
    with(main_tabs[2]) type = "Achievements";
    with(main_tabs[3]) type = "Statistics";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw GUI

{
    if sign(image_speed) != roll_dir then image_speed = global.frame_rate*roll_dir;
    display_set_gui_size(view_wport[0]/3,view_hport[0]/3);
    draw_sprite(spr_JournalPaper,image_index,view_wview[0]/2,view_hview[0]/2); //Paper
    if image_index = sprite_get_number(spr_JournalRoll)-1 &amp;&amp; roll_dir = 1
        {
        roll_dir = 0;
        tab_current = "Start";
        event_user(0);
        }
    else if image_index = 0 &amp;&amp; roll_dir = -1 then instance_destroy();
    
    if journal_dir = -1 then if journal_alpha &gt; 0 then journal_alpha = clamp(journal_alpha-0.04,0,1); //Kapanma
    else
        {
        roll_dir = -1;
        journal_dir = 0;
        }
    
    switch(tab_current)
        {
        case "Start":
            if journal_dir = 1 then if journal_alpha &lt; 1 then journal_alpha = clamp(journal_alpha+0.04,0,1);
            draw_sprite_ext(spr_JournalLogo,floor(logo_index),view_wview[0]/2,view_hview[0]/2,1,1,0,c_white,journal_alpha); //Logo
            logo_index = logo_index+frate mod sprite_get_number(spr_JournalLogo);
            break;
            
        case "Last Dialogues":
            draw_sprite_ext(spr_JournalBigFrame,0,view_wview[0]/2,view_hview[0]/2+12,1,1,0,c_white,journal_alpha); //Last dialogues tablosu
            draw_sprite_ext(spr_JournalArrowBig,last_dialogues_arrow[0].image_index,last_dialogues_arrow[0].x-view_xview[0],last_dialogues_arrow[0].y-view_yview[0],1,1,0,c_white,journal_alpha); //Yukardaki ok
            draw_sprite_ext(spr_JournalArrowBig,last_dialogues_arrow[1].image_index,last_dialogues_arrow[1].x-view_xview[0],last_dialogues_arrow[1].y-view_yview[0],1,1,180,c_white,journal_alpha); //Aşağıdaki ok
            
            scr_last_dialogues_draw();
            break;
            
        case "Achievements":
            draw_sprite_ext(spr_JournalFrameAchievements,0,view_wview[0]/2,view_hview[0]/2+12,1,1,0,c_white,journal_alpha); //Achievements tablosu
            for(var q = 0; q &lt; min(achievements_max,16); q++)
                {
                if ach[q].sprite_index = -1 then continue;
                with(ach[q]) draw_sprite_ext(sprite_index,image_index,x-view_xview[0],y-view_yview[0],1,1,0,c_white,other.journal_alpha); //Achievement kareleri
                if q = achievement_number-(achievements_page*16) then with(ach[q]) draw_sprite_ext(spr_JournalSquare,1,x-view_xview[0],y-view_yview[0],1,1,0,c_white,other.journal_alpha); //Seçili kare
                }
            with(achievements_arrow[0]) draw_sprite_ext(sprite_index,image_index,x-view_xview[0],y-view_yview[0],1,1,image_angle,c_white,other.journal_alpha); //Sağdaki ok
            with(achievements_arrow[1]) draw_sprite_ext(sprite_index,image_index,x-view_xview[0],y-view_yview[0],image_xscale,1,image_angle,c_white,other.journal_alpha); //Soldaki ok
            display_set_gui_size(view_wport[0],view_hport[0]);
            draw_set_colour(c_black);
            draw_set_font(fnt_AchievementTitle);
            draw_text_colour(view_wport[0]/2-256,view_hport[0]/2+272,achievement_name[achievement_number],c_black,c_black,c_black,c_black,journal_alpha); //Seçili başarımın ismi
            draw_set_font(fnt_AchievementDescription);
            draw_text_color(view_wport[0]/2-256,view_hport[0]/2+304,achievement_description[achievement_number],c_black,c_black,c_black,c_black,journal_alpha);; //Seçili başarımın açıklaması
                
            break;
            
        case "Statistics":
            draw_sprite_ext(spr_JournalFrameScroll,0,view_wview[0]/2,view_hview[0]/2+16,1,1,0,c_white,journal_alpha); //Dış hatlar
            draw_sprite_ext(spr_JournalStatisticsFrames,0,view_wview[0]/2,view_hview[0]/2-sprh*2+37-8,1,1,0,c_white,journal_alpha); //Birinci istatistik
            draw_sprite_ext(spr_JournalStatisticsFrames,1,view_wview[0]/2,view_hview[0]/2-sprh+43-8,1,1,0,c_white,journal_alpha); //İkinci istatistik
            draw_sprite_ext(spr_JournalStatisticsFrames,2,view_wview[0]/2,view_hview[0]/2+49-8,1,1,0,c_white,journal_alpha); //Üçüncü istatistik
            draw_sprite_ext(spr_JournalStatisticsLastFrame,0,view_wview[0]/2,view_hview[0]/2+sprh+55-8,1,1,0,c_white,journal_alpha); //Görünmeyen son istatistik
            draw_sprite_ext(spr_JournalArrowBig,statistics_arrow[0].image_index,statistics_arrow[0].x-view_xview[0],statistics_arrow[0].y-view_yview[0],1,1,0,c_white,journal_alpha); //Yukardaki ok
            draw_sprite_ext(spr_JournalArrowBig,statistics_arrow[1].image_index,statistics_arrow[1].x-view_xview[0],statistics_arrow[1].y-view_yview[0],1,1,180,c_white,journal_alpha); //Aşağıdaki ok
            
            display_set_gui_size(view_wport[0],view_hport[0]);
            
            draw_set_font(fnt_AchievementTitle);
            draw_text_colour(view_wport[0]/2-218,view_hport[0]/2+(-sprh*2+16)*3,"- " + statistics_questions[statistics_offset],c_black,c_black,c_black,c_black,journal_alpha);
            draw_set_font(fnt_AchievementDescription);
            draw_text_colour(view_wport[0]/2-218,view_hport[0]/2+(-sprh*2+32)*3,"   " + string(statistics_answers[statistics_offset]),c_black,c_black,c_black,c_black,journal_alpha);
            
            draw_set_font(fnt_AchievementTitle);
            draw_text_colour(view_wport[0]/2-218,view_hport[0]/2+(-sprh+22)*3,"- " + statistics_questions[statistics_offset+1],c_black,c_black,c_black,c_black,journal_alpha);
            draw_set_font(fnt_AchievementDescription);
            draw_text_colour(view_wport[0]/2-218,view_hport[0]/2+(-sprh+22+16)*3,"   " + string(statistics_answers[statistics_offset+1]),c_black,c_black,c_black,c_black,journal_alpha);
            
            draw_set_font(fnt_AchievementTitle);
            draw_text_colour(view_wport[0]/2-218,view_hport[0]/2+(28*3),"- " + statistics_questions[statistics_offset+2],c_black,c_black,c_black,c_black,journal_alpha);
            draw_set_font(fnt_AchievementDescription);
            draw_text_colour(view_wport[0]/2-218,view_hport[0]/2+(28+16)*3,"   " + string(statistics_answers[statistics_offset+2]),c_black,c_black,c_black,c_black,journal_alpha);
            
            if statistics_offset &lt; statistics_max
                {
                draw_set_font(fnt_AchievementTitle);
                draw_text_colour(view_wport[0]/2-218,view_hport[0]/2+(+sprh*2-8)*3,"- " + statistics_questions[statistics_offset+3],c_black,c_black,c_black,c_black,journal_alpha/2);
                draw_set_font(fnt_AchievementDescription);
                draw_text_colour(view_wport[0]/2-218,view_hport[0]/2+(+sprh*2-8+16)*3,"   " + string(statistics_answers[statistics_offset+3]),c_black,c_black,c_black,c_black,journal_alpha/2);
                }            
        }
    display_set_gui_size(view_wport[0]/3,view_hport[0]/3);
        
    if tab_current != "Roll" //Tabs
        {
        for(var h = 0; h &lt; 4; h++) 
            {
            draw_sprite_ext(spr_JournalTab,main_tabs[h].image_index,(main_tabs[h].x-view_xview[0]),(main_tabs[h].y-view_yview[0]),1,1,0,c_white,journal_alpha);
            draw_sprite_ext(spr_JournalIcons,h,(main_tabs[h].x-view_xview[0])-2,(main_tabs[h].y-view_yview[0])+sign(main_tabs[h].image_index)*14-16,1,1,0,c_white,journal_alpha);
            }
        }
    
    draw_sprite(spr_JournalRoll,image_index,view_wview[0]/2,view_hview[0]/2); //Roll
        
    display_set_gui_size(ww,hh);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
