<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

{
    camera_y = 0;
    global.camera = "Stable";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Camera

{
    if keyboard_check(vk_up) or keyboard_check(ord('W')) then global.camera = "Up";
    else if keyboard_check(vk_down) or keyboard_check(ord('S')) then global.camera = "Down";
    else global.camera = "Stable";
    
    if global.camera = "Up" 
        {
        camera_y = -96;
        }
    else if global.camera = "Down" 
        {
        camera_y = 96;
        }
    else if global.camera = "Stable"
        {
        camera_y = 0;
        }
        
    x = clamp(x,0+view_wview[0]/2,room_width-view_wview[0]/2);
    y = clamp(y,0+view_hview[0]/2,room_height-view_hview[0]/2);
        
    if instance_number(obj_character) != 0
        {
        x += (obj_character.x - x) * .1;
        y += (clamp(obj_character.y,0+view_hview[0]/2,room_height-view_hview[0]/2)+camera_y - y) * .1;
        }
        
    x = clamp(x,0+view_wview[0]/2,room_width-view_wview[0]/2);
    y = clamp(y,0+view_hview[0]/2,room_height-view_hview[0]/2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
