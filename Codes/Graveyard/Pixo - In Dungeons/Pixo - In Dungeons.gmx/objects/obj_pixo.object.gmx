<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_pixo_stand_right</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

{
    image_speed = 1/3;
    collision = false;
    falling = false;
    falling_direction = 0;
    death = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reborn

{
    x = xstart;
    y = ystart;
    death = false;
    sprite_index = s_pixo_stand_right;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision

{
    if death then exit;
    direction = direction mod 360;
    x = clamp(x,12,room_width-12);
    y = clamp(y,12,room_height-12);
    
    var a, b;
    if sprite_index = s_pixo_left || sprite_index = s_pixo_stand_left
        {
        a = -7;
        b = 0;
        }
    if sprite_index = s_pixo_right || sprite_index = s_pixo_stand_right
        {
        a = -3;
        b = 4;
        }
    var inst = collision_rectangle(x+a,y+8,x+b,y+13,obj_block,false,true);
    if inst = noone
        {
        if collision
            {
            collision = false;
            falling = true;
            }
        if vspeed &lt; 10 then vspeed += 0.5;
        }
        
    if (falling || direction mod 360 &lt; 360 &amp;&amp; direction mod 360 &gt; 180) &amp;&amp; !collision
        {
        var inst2 = collision_rectangle(x-12,y-12,x+12,y+11,obj_block,false,true);
        if inst2 != noone
            {
            if hspeed = 0
                {
                var inst3 = collision_line(x-12,y,x-12,y+11,obj_block,false,true);
                var inst4 = collision_line(x+12,y,x+12,y+11,obj_block,false,true);
                if inst3 = noone &amp;&amp; inst4 != noone then hspeed = -1;
                else if inst4 = noone &amp;&amp; inst3 != noone then hspeed = 1;
                }
            falling = true;
            }
        }
      
    if !collision &amp;&amp; (direction mod 360 &lt; 360 &amp;&amp; direction mod 360 &gt; 180 || inst != noone)
        {
        var inst2 = collision_rectangle(x+a,y+8,x+b,y+13+vspeed,obj_block,false,true);
        if inst2 != noone
            {
            if distance_to_object(inst2) &lt;= vspeed
                {
                if falling then hspeed = 0;
                vspeed = 0;
                y += distance_to_object(inst2);
                collision = true;
                falling = false;
                }
            }
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_key">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Key

{
    global.key_number++;
    effect_create_below(ef_firework,other.x+12,other.y+12,0,c_yellow);
    scr_destroy_instance(other);
    if global.key_number = global.key_total
        {
        with(obj_door) alarm[0] = 1;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_door">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Next Level

{
    if other.open
        {
        if room_exists(room_next(room)) then room_goto_next();
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision

{
    if !collision &amp;&amp; sign(vspeed) = -1 then vspeed = -vspeed;
    if collision &amp;&amp; speed = 0 then direction = 270;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_death">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death

{
    if other.object_index = obj_crystal
        {
        if !other.fatal then exit;
        }
    effect_create_above(ef_explosion,x,y,0,c_gray);
    alarm[0] = 30;
    death = true;
    x = -1000;
    y = -1000;
    speed = 0;
    direction = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move

{
    var inst = collision_line(x,y-6,x+12+hspeed,y+10+vspeed,obj_block,false,true);
    if inst != noone
        {
        hspeed = 0;
        exit;
        }
    
    if collision
        {
        hspeed = 5;
        sprite_index = s_pixo_right;
        image_speed = 1/3;
        }
    else if vspeed != 0
        {
        if hspeed &lt; 5 then hspeed += 0.5;
        sprite_index = s_pixo_right;
        if hspeed != 0
            {
            image_speed = 0;
            image_index = 1;
            }
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Jump

{
    if collision &amp;&amp; vspeed = 0
        {
        vspeed = -7;
        collision = false;
        }
        
    if sign(vspeed) = -1 &amp;&amp; !collision
        {
        vspeed -= 0.25;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move

{
    var inst = collision_line(x,y-6,x-12+hspeed,y+10+vspeed,obj_block,false,true);
    if inst != noone
        {
        x -= distance_to_object(inst);
        hspeed = 0;
        exit;
        }
        
    if collision
        {
        hspeed = -5;
        sprite_index = s_pixo_left;
        image_speed = 1/3;
        }
    else if vspeed != 0
        {
        if hspeed &gt; -5 then hspeed -= 0.5;
        sprite_index = s_pixo_left;
        if hspeed != 0
            {
            image_speed = 0;
            image_index = 1;
            }
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

{
    draw_self();
    draw_set_colour(c_white);
    draw_set_font(fnt_tahoma);
    draw_text(48,room_height-32,string(global.key_number) + " / " + string(global.key_total));
    draw_text(48,room_height-64,string(direction));
    draw_text(48,room_height-96,string(collision)); 
    draw_text(48,room_height-128,string(falling));
    
    if !global.draw then exit;
    draw_set_colour(c_red);
    draw_line(x-12,y-12,x-12,y+12);
    draw_line(x+12,y-12,x+12,y+12);
    
    draw_set_colour(c_blue);
    var a, b;
    if sprite_index = s_pixo_left || sprite_index = s_pixo_stand_left
        {
        a = -7;
        b = 0;
        }
    if sprite_index = s_pixo_right || sprite_index = s_pixo_stand_right
        {
        a = -3;
        b = 4;
        }
    draw_rectangle(x+a,y+8,x+b,y+13,true);
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Image

{
    if !keyboard_check(vk_left)
        {
        sprite_index = s_pixo_stand_right;
        hspeed = 0;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Image

{
    if !keyboard_check(vk_right)
        {
        sprite_index = s_pixo_stand_left;
        hspeed = 0;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
