<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_monster3</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_monster_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

{
    image_speed = 0.1;
    motion_set(180,2);
    pursuit = false;
    limit = 160;
    count = limit;
    exo = false;
    falling = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drop

{
    drop = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Effect

{
    if image_index != image_number-1
        {
        image_index++;
        alarm[0] = 2;
        }
    else
        {
        y += 49;
        sprite_index = s_monster3;
        image_yscale = -image_yscale;
        image_speed = 0.1;
        image_index = 0;
        falling = true;
        exo = false;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check

{
    if exo then exit;
    
    if falling
        {
        if vspeed &lt; 10 then vspeed += 0.5;
        var inst = collision_rectangle(x-24,y,x+24,y+vspeed,obj_block,false,true);
        if inst != noone
            {
            if distance_to_object(inst) &lt;= vspeed
                {
                y += distance_to_object(inst);
                falling = false;
                vspeed = 0;
                image_yscale = -image_yscale;
                y -= 16;
                var inst_left = collision_line(x-24,y,x-24,y+24,obj_block,false,true);
                var inst_right = collision_line(x+24,y,x+24,y+24,obj_block,false,true);
                if (inst_left != noone &amp;&amp; inst_right = noone)
                    {
                    hspeed = -2;
                    image_xscale = 1;
                    }
                else if (inst_left = noone &amp;&amp; inst_right != noone)
                    {
                    hspeed = 2;
                    image_xscale = -1;
                    }
                else if (inst_left != noone &amp;&amp; inst_right != noone)
                    {
                    var rnd = choose(-1,1);
                    hspeed = rnd*2;
                    image_xscale = -rnd;
                    }
                pursuit = false;
                }
            }
        exit;
        }
    
    var inst = collision_rectangle(x-24,y+32,x+24,y+80,obj_pixo,false,true);
    if inst != noone
        {
        if !pursuit
            {
            image_speed = 0;
            speed = 0
            pursuit = true;
            exo = true;
            sprite_index = s_monster3_effect;
            image_index = 0;
            alarm[0] = 2;
            exit;
            }
        }
        
    var inst_left = collision_line(x-24,y,x-24,y+24,obj_block,false,true);
    var inst_right = collision_line(x+24,y,x+24,y+24,obj_block,false,true);
    if (inst_left != noone &amp;&amp; inst_right = noone)
        {
        hspeed = -2;
        image_xscale = 1;
        }
    else if (inst_left = noone &amp;&amp; inst_right != noone)
        {
        hspeed = 2;
        image_xscale = -1;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

{   draw_self();
    if !global.draw then exit;
    draw_set_colour(c_red);
    draw_rectangle(x-24,y+32,x+24,y+80,true);
    draw_set_colour(c_blue);
    draw_rectangle(x-24,y,x-24,y+24,true);
    draw_rectangle(x+24,y,x+24,y+24,true);
    draw_set_colour(c_green);
    draw_rectangle(x-24,y,x+24,y+vspeed,true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
